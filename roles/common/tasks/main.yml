---

- name: check timezone
  command: timedatectl
  register: timezone

- name: set timezone 'Asia/Tokyo'
  become: true
  command: sudo raspi-config nonint do_change_timezone 'Asia/Tokyo' # 'Etc/UTC'
  when: timezone.stdout.find('Asia/Tokyo') == -1

- name: apt-get install oracle-java8-jdk, git, sshpass
  become: true
  apt: name={{item}} state=present update_cache=yes
  with_items:
      - oracle-java8-jdk
      - git
      - sshpass
      - prelink

- name: Update '/etc/hosts'
  become: true
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: "u=rw,g=r,o=r" # 0644

- name: Update '/etc/hostname'
  become: true
  template:
    src: hostname.j2
    dest: /etc/hostname
    owner: root
    group: root
    mode: "u=rw,g=r,o=r" # 0644

- name: create groups
  become: true
  group: name={{ item.name }} state=present
  with_items: "{{ users }}"

- name: create users
  become: true
  user: name={{ item.name }} shell=/bin/bash state=present group={{ item.name }} append=yes groups={{ item.groups }}
  with_items: "{{ users }}"

- name: change password
  become: true
  user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
  with_items: "{{ users }}"

- name: add sudoers
  become: true
  lineinfile:
    dest: /etc/sudoers
    line: 'hadoop ALL=(ALL) NOPASSWD: ALL'

# -------------------------------------------
- name: check ssh-key
  stat: path=/home/pi/.ssh/id_rsa
  register: ssh_key

- name: create ssh-key
  shell: sh -lc "ssh-keygen -f /home/pi/.ssh/id_rsa -t rsa -N ''"
  when: not ssh_key.stat.exists

- name: check generated-ssh-key
  stat: path=/home/pi/.ssh/id_rsa
  register: ssh_key

- name: copy ssh-key to each node pi
  shell: sh -lc "sshpass -p 'raspberry' ssh-copy-id -i ~/.ssh/id_rsa.pub -o 'StrictHostKeyChecking no' {{ item }}"
  with_items:
    - "{{ ansible_play_hosts }}"
  when: ssh_key.stat.exists

# -------------------------------------------
- name: check ssh-key hadoop
  become: yes
  stat: path=/home/hadoop/.ssh/id_rsa
  register: ssh_key_h

- name: create ssh-key hadoop
  shell: sudo -u hadoop sh -lc "ssh-keygen -f /home/hadoop/.ssh/id_rsa -t rsa -N ''"
  when: not ssh_key_h.stat.exists

- name: check generated-ssh-key hadoop
  become: yes
  stat: path=/home/hadoop/.ssh/id_rsa
  register: ssh_key_h

- name: copy ssh-key to each node hadoop
  shell: sudo -u hadoop sh -lc "sshpass -p 'hadoop' ssh-copy-id -i /home/hadoop/.ssh/id_rsa.pub -o 'StrictHostKeyChecking no' {{ item }}"
  with_items:
    - "{{ ansible_play_hosts }}"
  when: ssh_key.stat.exists
