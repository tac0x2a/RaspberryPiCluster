---
#  Hive setup

# - name: clean up Hive basics
#   become: true
#   file: path={{ item }} state=absent
#   with_items:
#     - /usr/src/hadoop
#     - /usr/src/hadoop-3.0.0
#     - /var/lib/hadoop
#     - /usr/src/hadoop-3.0.0.tar.gz
#     - /etc/profile.d/hive.sh
#   tags: clean

# - name: remove Hive directories on HDFS
#   shell: sh -lc "HADOOP_USER_NAME=hadoop hadoop fs {{ item }}"
#   with_items:
#     - -rmdir -p /user/hive
#   tags: clean

- name: check hive.tgz
  stat: path=/usr/src/apache-hive-2.3.2-bin.tar.gz
  register: hive_tgz

- name: check hive
  stat: path=/usr/src/apache-hive-2.3.2-bin
  register: hive_home

- name: download Hive
  become: true
  get_url:
    url: http://ftp.jaist.ac.jp/pub/apache/hive/hive-2.3.2/apache-hive-2.3.2-bin.tar.gz
    dest: /usr/src/apache-hive-2.3.2-bin.tar.gz
  when: not hive_tgz.stat.exists

- name: extract Hive
  become: true
  unarchive:
      src:  /usr/src/apache-hive-2.3.2-bin.tar.gz
      dest: /usr/src/
      remote_src: yes
  when: not hive_home.stat.exists

- name: add HIVE_HOME to envinroment
  become: true
  template: src=etc/profile.d/hive.sh dest=/etc/profile.d/hive.sh owner=root group=root mode=0644

- name: check Hive directories on HDFS
  shell: sh -lc "HADOOP_USER_NAME=hadoop hadoop fs -test -e /user/hive/warehouse"
  failed_when: no
  changed_when: no
  register: hive_hdfs

- name: make Hive directories on HDFS
  shell: sh -lc "HADOOP_USER_NAME=hadoop hadoop fs {{ item }}"
  with_items:
    - -mkdir -p /tmp
    - -mkdir -p /user/hive/warehouse
    - -chmod g+w /tmp
    - -chmod g+w /user/hive/warehouse
  when: hive_hdfs.rc != 0
